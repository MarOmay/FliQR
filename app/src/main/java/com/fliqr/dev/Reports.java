package com.fliqr.dev;

import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.provider.OpenableColumns;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.nio.charset.StandardCharsets;

public class Reports extends AppCompatActivity {

    private static final int REQUEST_CODE_OPEN = 1;

    private ImageView imageView;
    private TextView text;
    private Button choose, generate;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_reports);

        imageView = findViewById(R.id.filetype_icon);
        text = findViewById(R.id.file_name);
        choose = findViewById(R.id.choose_button);
        generate = findViewById(R.id.generate_button);

        imageView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                fetchDocx();
            }
        });
        choose.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                fetchDocx();
            }
        });
    }

    private void fetchDocx(){
        Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
        intent.addCategory(Intent.CATEGORY_OPENABLE);
        intent.setType("*/*");
        String[] mimetypes = {"application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/msword"};
        intent.putExtra(Intent.EXTRA_MIME_TYPES, mimetypes);
        startActivityForResult(intent, REQUEST_CODE_OPEN);

    }

    @RequiresApi(api = Build.VERSION_CODES.R)
    @SuppressLint("Range")
    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == REQUEST_CODE_OPEN){
            try {

                /*
                * THIS CODE DOESN'T WORK JUST YET, WE'RE KEEPING IT
                * HERE FOR FUTURE REFERENCE, OR POSSIBLE CONTINUATION.
                *
                * SOME CODES HAD BEEN DELIBERATELY WRITTEN IN SUCH
                * WEIRD WAYS DUE TO DEBUGGING PURPOSES.
                *
                * PLEASE DO NOT EDIT THIS FILE.
                *
                * THANK YOU!
                * - ALEX
                *
                * */

                Uri uri = data.getData();
                String result = null, dir = null;
                if (uri.getScheme().equals("content")) {
                    Cursor cursor = getContentResolver().query(uri, null, null, null, null);
                    try {
                        if (cursor != null && cursor.moveToFirst()) {
                            result = cursor.getString(cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME));
                        }
                    } finally {
                        cursor.close();
                    }
                }
                if (result == null) {
                    result = uri.getPath();
                    int cut = result.lastIndexOf('/');
                    if (cut != -1) {
                        result = result.substring(cut + 1);
                    }
                }

                text.setText(result);
                imageView.setImageResource(R.drawable.docx_big);

                Toast.makeText(getApplicationContext(), "Phase 1", Toast.LENGTH_SHORT).show();

                BufferedInputStream bufferedInputStream = new BufferedInputStream(getContentResolver().openInputStream(data.getData()));

                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

                int ctr;
                byte [] b = new byte[9999999];

                while ((ctr=bufferedInputStream.read(b, 0, b.length)) != -1){
                    byteArrayOutputStream.write(b, 0, ctr);
                }

                b = byteArrayOutputStream.toByteArray();

                String s = new String(b, StandardCharsets.UTF_8);
                

                bufferedInputStream.close();
                Toast.makeText(getApplicationContext(), "Length: " + b.length, Toast.LENGTH_SHORT).show();
                Toast.makeText(getApplicationContext(), s.length()+"", Toast.LENGTH_SHORT).show();

                bufferedInputStream.close();

                //File file = new File(uri.getPath() + "z");

            }
            catch (Exception e){
                Toast.makeText(getApplicationContext(), "Error fetching file", Toast.LENGTH_SHORT).show();
            }

        }
    }

    public static Bitmap loadBitmapFromView(View v, int width, int height) {
        Bitmap b = Bitmap.createBitmap(width , height, Bitmap.Config.ARGB_8888);
        Canvas c = new Canvas(b);
        v.layout(0, 0, v.getLayoutParams().width, v.getLayoutParams().height);
        v.draw(c);
        return b;
    }

    public void back(View view){
        finish();
    }

    public void gotoOutput(View view){
        Intent intent = new Intent(Reports.this, Output.class);
        Reports.this.startActivity(intent);
        Reports.this.finish();
    }
}